module Sequel
  class Model
    def self.[]: (*untyped) -> instance?

    def self.columns: -> Array[Symbol]
  
    def self.create: (**untyped) ?{ (instance) -> void } -> instance

    def self.dataset_module: (Module?) ?{ -> void } -> void

    def self.db: -> Database
    
    def self.db=: (Database) -> void
    
    def self.db_schema: -> Hash[Symbol, untyped]

    def self.def_column_alias: (Symbol, Symbol) -> void

    def self.find: (*untyped) ?{ -> void } -> instance?
    
    def self.find_or_create: (**untyped) ?{ (instance) -> void } -> instance

    def self.freeze: -> void

    def self.has_dataset?: -> bool

    def self.implicit_table_name: -> Symbol

    def self.no_primary_key: -> void
    
    def self.plugin: (Symbol, *untyped) ?{ -> void } -> void

    def self.primary_key_hash: (untyped) -> Hash[Symbol, untyped]

    def self.set_dataset: (untyped, **untyped) -> void

    def self.table_name: -> Symbol
  end
end
